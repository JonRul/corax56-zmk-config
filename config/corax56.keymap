#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define COLEMAK 0
#define QWERTY 1
#define WASD 2
#define SYM 3
#define NAV 4
#define DOUBLE 5
#define ADJUST 6

// additional caps word keys

&caps_word { continue-list = <UNDERSCORE MINUS LS(MINUS) UP DOWN LEFT RIGHT BSPC DEL>; };

/ {
    behaviors {
        lthp: layer_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        mthp: mod_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        // undead `

        ud_grave: ud_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp SPACE>;
        };

        // undead ~

        ud_tilde: ud_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp TILDE &kp SPACE>;
        };

        // undead ^

        ud_caret: ud_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp CARET &kp SPACE>;
        };

        // undead '

        ud_sqt: ud_sqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp SQT &kp SPACE>;
        };

        // undead "

        ud_dqt: ud_dqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LS(SQT) &kp SPACE>;
        };

        // ascii arrow ->

        asc_arr: asc_arr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp MINUS &kp LS(DOT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        gm_capsword {
            bindings = <&caps_word>;

            // caps on G+M

            key-positions = <28 29>;
        };

        sticky_adjust {
            bindings = <&sl ADJUST>;

            // sticky adjust layer on LALT+RALT

            key-positions = <51 56>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorak {
            display-name = "Colemak";
            bindings = <
              &trans   &trans     &trans      &trans  &trans                              &trans     &trans  &trans  &trans  &trans
       &none  &none    &kp COMMA  &kp PERIOD  &kp P   &none                               &none      &kp G   &kp C   &kp T   &none              &none
&none  &none  &kp A    &kp O      &kp E       &kp I   &kp U                               &kp H      &kp D   &kp R   &kp N   &kp S              &none  &none
       &none  &kp TAB  &kp Q      &kp J       &kp K   &kp X            &none    &kp C_PP  &kp B      &kp M   &kp W   &kp V   &kp RG(BACKSPACE)  &none
                                  &none       &none   &mt LSHFT LSHFT  &mo 1    &mo 2     &kp SPACE  &none   &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        home {
            display-name = "QWERTY";
            bindings = <
                &trans     &trans    &trans            &trans    &trans                    &trans  &trans    &trans             &trans    &trans
        &trans  &trans     &trans    &trans            &trans    &trans                    &trans  &trans    &trans             &trans    &trans     &trans
&trans  &trans  &kp LSHFT  &kp LALT  &kp LEFT_CONTROL  &kp LGUI  &kp G                     &trans  &kp RGUI  &kp RIGHT_CONTROL  &kp RALT  &kp RSHFT  &trans  &trans
        &trans  &trans     &trans    &trans            &trans    &trans  &trans    &trans  &trans  &trans    &trans             &trans    &trans     &trans
                                     &trans            &trans    &trans  &trans    &trans  &trans  &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        alt {
            display-name = "alt";
            bindings = <
                &trans            &trans         &trans          &trans  &trans                              &trans  &trans     &trans   &trans  &trans
        &trans  &trans            &kp LS(N1)     &kp UNDERSCORE  &kp Z   &trans                              &trans  &kp F      &trans   &kp Y   &trans     &trans
&trans  &trans  &kp SINGLE_QUOTE  &kp SEMICOLON  &kp ESCAPE      &trans  &kp LEFT_BRACKET                    &trans  &kp ENTER  &kp DEL  &kp L   &kp MINUS  &none   &trans
        &trans  &mo 3             &trans         &kp X           &kp C   &kp V             &trans    &trans  &trans  &trans     &trans   &trans  &trans     &trans
                                                 &trans          &trans  &mo 5             &mo 4     &trans  &trans  &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        // left mod

        sym_layer {
            display-name = "Symbols";
            bindings = <
                &trans  &trans     &trans     &trans     &trans                           &trans      &trans      &trans      &trans      &trans
        &trans  &none     &trans  &trans  &trans  &trans                    &none       &kp RA(N5) &kp RA(N6) &kp GRAVE &kp LS(N7)      &none 
&trans  &trans  &none   &kp LPAR   &kp RPAR   &kp COLON  &asc_arr                         &kp EQUAL &kp LS(N8) &kp LS(N9) &kp LS(N0) &kp LS(GRAVE)  &kp RA(N7)  &kp RA(N7)
        &trans     &trans  &trans  &trans  &trans   &trans         &trans    &trans  &none       &kp LS(N4)  &kp RA(N8)  &kp RA(N9)  &kp BACKSLASH  &trans
                                   &trans     &trans     &trans         &trans    &trans  &mo DOUBLE  &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        // right mod

        nav_layer {
            display-name = "Num/Nav";
            bindings = <
                &none      &none   &none   &none           &none                            &none            &none      &none      &none     &none
        &trans  &kp SLASH  &kp N7  &kp N8  &kp N9          &kp STAR                         &none            &none      &none      &none     &none      &trans
&trans  &trans  &kp DOT    &kp N1  &kp N2  &kp N3          &kp EQUAL                        &kp HOME         &kp LEFT   &kp UP     &kp DOWN  &kp RIGHT  &kp END  &trans
        &trans  &ud_tilde  &kp N4  &kp N5  &kp N6          &kp PLUS       &trans    &trans  &kp PAUSE_BREAK  &kp PG_DN  &kp PG_UP  &none     &none      &trans
                                   &trans  &mt LALT MINUS  &lt DOUBLE N0  &trans    &trans  &trans           &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_PREV C_NEXT>;
        };

        // double mod

        number {
            display-name = "numbers";
            bindings = <
                &none      &none     &none      &none         &none                     &none      &none         &none         &none         &none
        &trans  &none      &none     &none      &none         &none                     &none      &kp N7        &kp N8        &kp N9        &none   &trans
&trans  &trans  &kp LSHFT  &kp LALT  &kp LCTRL  &kp LEFT_GUI  &none                     &kp PLUS   &kp N4        &kp N5        &kp NUMBER_6  &kp N0  &trans  &trans
        &trans  &none      &none     &none      &none         &none   &trans    &trans  &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none   &trans
                                     &trans     &trans        &trans  &trans    &mo 7   &trans     &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_PREV C_NEXT>;
        };

        bt {
            display-name = "Adjust";
            bindings = <
              &none       &none         &none         &none              &sys_reset                      &sys_reset  &none         &none         &none         &none
       &none  &to QWERTY  &none         &to WASD      &ext_power EP_TOG  &none                           &none       &none         &none         &none         &none  &none
&none  &none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &out OUT_TOG                    &none       &bt BT_NXT    &bt BT_PRV    &out OUT_TOG  &none  &none  &none
       &none  &none       &none         &to COLEMAK   &none              &bt BT_CLR    &trans    &trans  &trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none
                                        &trans        &trans             &trans        &trans    &trans  &trans      &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        functionNumber {
            bindings = <
                &none      &trans    &trans     &trans    &trans                    &trans   &trans  &trans  &trans  &trans
        &trans  &trans     &trans    &trans     &trans    &trans                    &trans   &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans  &kp LSHFT  &kp LALT  &kp LCTRL  &kp LGUI  &trans                    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans  &trans
        &trans  &trans     &trans    &trans     &trans    &trans  &trans    &trans  &kp F12  &kp F1  &kp F2  &kp F3  &trans  &trans
                                     &trans     &trans    &trans  &trans    &trans  &trans   &trans  &trans
            >;
        };
    };
};
